spring:
  application:
    name: aam-backend-service
  main:
    banner-mode: off
  jackson:
    deserialization:
      accept-empty-string-as-null-object: true
  r2dbc:
    url: r2dbc:h2:file://././data/dbh2;DB_CLOSE_DELAY=-1
    username: local
    password: local
  rabbitmq:
    listener:
      simple:
        prefetch: 1

management:
  endpoint:
    health:
      probes:
        enabled: true
  endpoints:
    web:
      exposure:
        include:
          - info
          - health

sqs-client-configuration:
  max-in-memory-size-in-mega-bytes: 16

couch-db-client-configuration:
  max-in-memory-size-in-mega-bytes: 64

---

spring:
  config:
    activate:
      on-profile: local-development
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/realms/dummy-realm
  rabbitmq:
    virtual-host: /
    listener:
      direct:
        retry:
          enabled: true
          max-attempts: 5
  webflux:
    base-path: /api

server:
  error:
    include-message: always
    include-binding-errors: always
  port: 9000
logging:
  level:
    #    org.springframework.amqp.rabbit: warn
    #    org.springframework.web: debug
    #    org.springframework.http: debug
    #    reactor.netty: debug
    com.aamdigital.aambackendservice: trace

aam-render-api-client-configuration:
  base-path: https://pdf.aam-digital.dev
#  auth-config:
#   client-id: <needs-environment-configuration>
#   client-secret: <needs-environment-configuration>
#   token-endpoint: <needs-environment-configuration>
#   grant-type: <needs-environment-configuration>
#   scope: <needs-environment-configuration>

couch-db-client-configuration:
  base-path: http://localhost:5984
  basic-auth-username: admin
  basic-auth-password: docker

sqs-client-configuration:
  base-path: http://localhost:4984
  basic-auth-username: admin
  basic-auth-password: docker

database-change-detection:
  enabled: true

report-calculation-processor:
  enabled: true

sentry:
  logging:
    enabled: false
