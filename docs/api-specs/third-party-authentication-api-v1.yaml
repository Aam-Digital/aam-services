openapi: 3.1.0
info:
  title: Aam Digital Third-Party Authentication API
  description: User Authentication by external authentication provider
  version: 1.0.0
servers:
  - url: https://api.aam-digital.dev/v1/authentication
    description: Development
  - url: https://api.aam-digital.app/v1/authentication
    description: Production
paths:
  /session:
    post:
      summary: Start a aam-digital sign-in flow for an externally authenticated user.
      tags:
        - third-party-authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSessionRequest'
      responses:
        200:
          description: User Session created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSession'
        404:
          description: Realm not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: No Authentication provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: No permissions to authenticate users on this realm
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /session/{sessionId}:
    get:
      summary: Validate a session. This only works once.
      tags:
        - third-party-authentication
      parameters:
        - $ref: '#/components/parameters/sessionId'
        - $ref: '#/components/parameters/sessionToken'
      responses:
        200:
          description: User Session created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSessionDataDto'
        404:
          description: Realm not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: No Authentication provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: No permissions to authenticate users on this realm
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /session/{sessionId}/redirect:
    get:
      summary: Get the redirectUrl for a session. This needs a user based authentication.
      tags:
        - third-party-authentication
      parameters:
        - $ref: '#/components/parameters/sessionId'
      responses:
        200:
          description: User Session created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSessionRedirectDto'
        404:
          description: Realm not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: No Authentication provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: No permissions to authenticate users on this realm
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  parameters:
    sessionId:
      in: path
      name: "sessionId"
      description: "Unique identifier of the session"
      schema:
        type: string
      required: true
    sessionToken:
      in: query
      name: "session_token"
      description: "Secret for session. Belongs to the session"
      schema:
        type: string
      required: true

  schemas:
    UserSessionRequest:
      type: object
      properties:
        realmId:
          type: string
          required: true
        userId:
          type: string
          required: true
          format: uuid
        firstName:
          type: string
          required: true
        lastName:
          type: string
          required: true
        redirectUrl:
          type: string
          required: true
        email:
          type: string
          required: true
          format: email
        additionalData:
          type: object
          required: false
          additionalProperties: true
    UserSession:
      type: object
      properties:
        sessionId:
          type: string
          required: true
          format: uuid
        sessionToken:
          type: string
          required: true
        entryPointUrl:
          type: string
          required: true
          format: uri
        validUntil:
          type: string
          required: true
          format: date-time
    UserSessionDataDto:
      type: object
      properties:
        userId:
          type: string
          required: true
          format: uuid
    UserSessionRedirectDto:
      type: object
      properties:
        redirectUrl:
          type: string
          required: true
          format: uri
    Error:
      type: object
      properties:
        errorCode:
          type: string
          items:
            enum:
              - NOT_FOUND
              - UNAUTHORIZED
              - FORBIDDEN
              - INTERNAL_SERVER_ERROR
        errorMessage:
          type: string